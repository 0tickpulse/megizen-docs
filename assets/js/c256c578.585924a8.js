"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[728],{4063:(e,c,t)=>{t.r(c),t.d(c,{assets:()=>n,contentTitle:()=>l,default:()=>r,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var i=t(6070),d=t(5710);const a={sidebar_custom_props:{description:"Represents an active model on an entity."}},l="MegActiveModelTag",o={id:"objecttype/MegActiveModelTag",title:"MegActiveModelTag",description:"<ObjectType",source:"@site/docs/objecttype/MegActiveModelTag.mdx",sourceDirName:"objecttype",slug:"/objecttype/MegActiveModelTag",permalink:"/megizen-docs/objecttype/MegActiveModelTag",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_custom_props:{description:"Represents an active model on an entity."}},sidebar:"tutorialSidebar",previous:{title:"megstate",permalink:"/megizen-docs/command/megstate"},next:{title:"MegBoneTag",permalink:"/megizen-docs/objecttype/MegBoneTag"}},n={},s=[{value:"Tags",id:"tags",level:2},{value:"Tag: <code>MegActiveModelTag.bone[&lt;id&gt;]</code>",id:"tag-megactivemodeltagboneid",level:3},{value:"Tag: <code>MegActiveModelTag.bones</code>",id:"tag-megactivemodeltagbones",level:3},{value:"Tag: <code>MegActiveModelTag.can_drive</code>",id:"tag-megactivemodeltagcan_drive",level:3},{value:"Tag: <code>MegActiveModelTag.can_ride</code>",id:"tag-megactivemodeltagcan_ride",level:3},{value:"Tag: <code>MegActiveModelTag.damage_tint</code>",id:"tag-megactivemodeltagdamage_tint",level:3},{value:"Tag: <code>MegActiveModelTag.default_tint</code>",id:"tag-megactivemodeltagdefault_tint",level:3},{value:"Tag: <code>MegActiveModelTag.driver</code>",id:"tag-megactivemodeltagdriver",level:3},{value:"Tag: <code>MegActiveModelTag.driver_bone</code>",id:"tag-megactivemodeltagdriver_bone",level:3},{value:"Tag: <code>MegActiveModelTag.glow_color</code>",id:"tag-megactivemodeltagglow_color",level:3},{value:"Tag: <code>MegActiveModelTag.has_passengers</code>",id:"tag-megactivemodeltaghas_passengers",level:3},{value:"Tag: <code>MegActiveModelTag.has_riders</code>",id:"tag-megactivemodeltaghas_riders",level:3},{value:"Tag: <code>MegActiveModelTag.hitbox_scale</code>",id:"tag-megactivemodeltaghitbox_scale",level:3},{value:"Tag: <code>MegActiveModelTag.hitbox_visible</code>",id:"tag-megactivemodeltaghitbox_visible",level:3},{value:"Tag: <code>MegActiveModelTag.lock_yaw</code>",id:"tag-megactivemodeltaglock_yaw",level:3},{value:"Tag: <code>MegActiveModelTag.lock_pitch</code>",id:"tag-megactivemodeltaglock_pitch",level:3},{value:"Tag: <code>MegActiveModelTag.modeled_entity</code>",id:"tag-megactivemodeltagmodeled_entity",level:3},{value:"Tag: <code>MegActiveModelTag.name</code>",id:"tag-megactivemodeltagname",level:3},{value:"Tag: <code>MegActiveModelTag.passengers</code>",id:"tag-megactivemodeltagpassengers",level:3},{value:"Tag: <code>MegActiveModelTag.scale</code>",id:"tag-megactivemodeltagscale",level:3},{value:"Tag: <code>MegActiveModelTag.seats</code>",id:"tag-megactivemodeltagseats",level:3},{value:"Tag: <code>MegActiveModelTag.seats</code>",id:"tag-megactivemodeltagseats-1",level:3},{value:"Mechanisms",id:"mechanisms",level:2},{value:"Mech: <code>MegActiveModelTag.can_drive</code>",id:"mech-megactivemodeltagcan_drive",level:3},{value:"Mech: <code>MegActiveModelTag.can_ride</code>",id:"mech-megactivemodeltagcan_ride",level:3},{value:"Mech: <code>MegActiveModelTag.damage_tint</code>",id:"mech-megactivemodeltagdamage_tint",level:3},{value:"Mech: <code>MegActiveModelTag.dismount_all</code>",id:"mech-megactivemodeltagdismount_all",level:3},{value:"Mech: <code>MegActiveModelTag.dismount_driver</code>",id:"mech-megactivemodeltagdismount_driver",level:3},{value:"Mech: <code>MegActiveModelTag.default_tint</code>",id:"mech-megactivemodeltagdefault_tint",level:3},{value:"Mech: <code>MegActiveModelTag.glow_color</code>",id:"mech-megactivemodeltagglow_color",level:3},{value:"Mech: <code>MegActiveModelTag.hitbox_scale</code>",id:"mech-megactivemodeltaghitbox_scale",level:3},{value:"Mech: <code>MegActiveModelTag.hitbox_visible</code>",id:"mech-megactivemodeltaghitbox_visible",level:3},{value:"Mech: <code>MegActiveModelTag.lock_pitch</code>",id:"mech-megactivemodeltaglock_pitch",level:3},{value:"Mech: <code>MegActiveModelTag.lock_yaw</code>",id:"mech-megactivemodeltaglock_yaw",level:3},{value:"Mech: <code>MegActiveModelTag.scale</code>",id:"mech-megactivemodeltagscale",level:3}];function g(e){const c={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",...(0,d.R)(),...e.components},{DetailsTable:t,EntryHeader:a,MetaEntry:l,ObjectType:o}=c;return t||h("DetailsTable",!0),a||h("EntryHeader",!0),l||h("MetaEntry",!0),o||h("ObjectType",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(c.h1,{id:"megactivemodeltag",children:"MegActiveModelTag"}),"\n",(0,i.jsx)(o,{name:"MegActiveModelTag",prefix:"megactivemodel@",identityFormat:(0,i.jsxs)(i.Fragment,{children:["Identified using the format ",(0,i.jsx)(c.code,{children:"megactivemodel@<entity>,<model_blueprint>"}),"."]}),description:(0,i.jsx)(i.Fragment,{children:"Represents an active model on an entity."})}),"\n",(0,i.jsx)(c.h2,{id:"tags",children:"Tags"}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltagboneid",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.bone[<id>]"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"MegBoneTag"}),Description:(0,i.jsx)(i.Fragment,{children:"Returns the bone with the specified id of the model."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltagbones",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.bones"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"MapTag(MegBoneTag)"}),Description:(0,i.jsx)(i.Fragment,{children:"Returns a map of all the bones of the model, with the bone id as the key and the bone as the value."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltagcan_drive",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.can_drive"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"ElementTag(Boolean)"}),Mechanism:(0,i.jsx)(c.a,{href:"#mech-megactivemodeltagcan_drive",children:(0,i.jsx)(c.code,{children:"can_drive"})}),Description:(0,i.jsx)(i.Fragment,{children:"Returns whether the active model can be driven."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltagcan_ride",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.can_ride"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"ElementTag(Boolean)"}),Mechanism:(0,i.jsx)(c.a,{href:"#mech-megactivemodeltagcan_ride",children:(0,i.jsx)(c.code,{children:"can_ride"})}),Description:(0,i.jsx)(i.Fragment,{children:"Returns whether the active model can be ridden."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltagdamage_tint",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.damage_tint"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"ColorTag"}),Mechanism:(0,i.jsx)(c.a,{href:"#mech-megactivemodeltagdamage_tint",children:(0,i.jsx)(c.code,{children:"damage_tint"})}),Description:(0,i.jsx)(i.Fragment,{children:"Returns the damage tint of the active model."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltagdefault_tint",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.default_tint"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"ColorTag"}),Mechanism:(0,i.jsx)(c.a,{href:"#mech-megactivemodeltagdefault_tint",children:(0,i.jsx)(c.code,{children:"default_tint"})}),Description:(0,i.jsx)(i.Fragment,{children:"Returns the default tint of the active model."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltagdriver",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.driver"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"EntityTag"}),Description:(0,i.jsx)(i.Fragment,{children:"Returns a EntityTag of the driver of the active model."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltagdriver_bone",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.driver_bone"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"MegBoneTag"}),Description:(0,i.jsx)(i.Fragment,{children:"Returns a MegBoneTag of the driver bone of the active model."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltagglow_color",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.glow_color"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"ColorTag"}),Mechanism:(0,i.jsx)(c.a,{href:"#mech-megactivemodeltagglow_color",children:(0,i.jsx)(c.code,{children:"glow_color"})}),Description:(0,i.jsx)(i.Fragment,{children:"Returns the glow color of the active model."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltaghas_passengers",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.has_passengers"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"ElementTag(Boolean)"}),Description:(0,i.jsx)(i.Fragment,{children:"Returns whether the active model has passengers."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltaghas_riders",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.has_riders"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"ElementTag(Boolean)"}),Description:(0,i.jsx)(i.Fragment,{children:"Returns a ElementTag(Boolean) of whether the active model has riders."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltaghitbox_scale",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.hitbox_scale"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"LocationTag"}),Mechanism:(0,i.jsx)(c.a,{href:"#mech-megactivemodeltaghitbox_scale",children:(0,i.jsx)(c.code,{children:"hitbox_scale"})}),Description:(0,i.jsx)(i.Fragment,{children:"Returns the scale of the active model's hitbox as a vector."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltaghitbox_visible",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.hitbox_visible"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"ElementTag(boolean)"}),Mechanism:(0,i.jsx)(c.a,{href:"#mech-megactivemodeltaghitbox_visible",children:(0,i.jsx)(c.code,{children:"hitbox_visible"})}),Description:(0,i.jsx)(i.Fragment,{children:"Returns whether the hitbox of the active model is visible."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltaglock_yaw",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.lock_yaw"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"ElementTag(boolean)"}),Mechanism:(0,i.jsx)(c.a,{href:"#mech-megactivemodeltaglock_yaw",children:(0,i.jsx)(c.code,{children:"lock_yaw"})}),Description:(0,i.jsx)(i.Fragment,{children:"Returns whether the yaw of the active model is locked."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltaglock_pitch",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.lock_pitch"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"ElementTag(boolean)"}),Mechanism:(0,i.jsx)(c.a,{href:"#mech-megactivemodeltaglock_pitch",children:(0,i.jsx)(c.code,{children:"lock_pitch"})}),Description:(0,i.jsx)(i.Fragment,{children:"Returns whether the pitch of the active model is locked."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltagmodeled_entity",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.modeled_entity"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"MegModeledEntityTag"}),Description:(0,i.jsx)(i.Fragment,{children:"Returns the modeled entity of the active model."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltagname",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.name"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"ElementTag"}),Description:(0,i.jsx)(i.Fragment,{children:"Returns the name of the active model."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltagpassengers",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.passengers"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"ListTag(EntityTag)"}),Description:(0,i.jsx)(i.Fragment,{children:"Returns a ListTag(EntityTag) of the passengers currently on the active model."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltagscale",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.scale"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"LocationTag"}),Mechanism:(0,i.jsx)(c.a,{href:"#mech-megactivemodeltagscale",children:(0,i.jsx)(c.code,{children:"scale"})}),Description:(0,i.jsx)(i.Fragment,{children:"Returns the scale of the active model as a vector."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltagseats",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.seats"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"ListTag(ElementTag)"}),Description:(0,i.jsx)(i.Fragment,{children:"Returns a ListTag of seats on the active model."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"tag-megactivemodeltagseats-1",children:["Tag: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.seats"})]})}),(0,i.jsx)(t,{Returns:(0,i.jsx)(c.code,{children:"MapTag"}),Description:(0,i.jsx)(i.Fragment,{children:"Returns a MapTag of entities on the active model, if any. Keys will be the bones entities are mounted on, while the values of those keys will be the entities themselves. Only returns the bones of entities who are mounted on the active model."})})]}),"\n",(0,i.jsx)(c.h2,{id:"mechanisms",children:"Mechanisms"}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"mech-megactivemodeltagcan_drive",children:["Mech: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.can_drive"})]})}),(0,i.jsx)(t,{Input:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(c.code,{children:"ElementTag(Boolean)"})}),Description:(0,i.jsx)(i.Fragment,{children:"Sets whether the active model can be driven."}),Tags:(0,i.jsx)(c.a,{href:"#tag-megactivemodeltagcan_drive",children:(0,i.jsx)(c.code,{children:"MegActiveModelTag.can_drive"})})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"mech-megactivemodeltagcan_ride",children:["Mech: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.can_ride"})]})}),(0,i.jsx)(t,{Input:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(c.code,{children:"ElementTag(Boolean)"})}),Description:(0,i.jsx)(i.Fragment,{children:"Sets whether the active model can be ridden."}),Tags:(0,i.jsx)(c.a,{href:"#tag-megactivemodeltagcan_ride",children:(0,i.jsx)(c.code,{children:"MegActiveModelTag.can_ride"})})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"mech-megactivemodeltagdamage_tint",children:["Mech: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.damage_tint"})]})}),(0,i.jsx)(t,{Input:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(c.code,{children:"ColorTag"})}),Description:(0,i.jsx)(i.Fragment,{children:"Sets the damage tint of the active model."}),Tags:(0,i.jsx)(c.a,{href:"#tag-megactivemodeltagdamage_tint",children:(0,i.jsx)(c.code,{children:"MegActiveModelTag.damage_tint"})})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"mech-megactivemodeltagdismount_all",children:["Mech: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.dismount_all"})]})}),(0,i.jsx)(t,{Description:(0,i.jsx)(i.Fragment,{children:"Dismounts everyone mounted on the active model."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"mech-megactivemodeltagdismount_driver",children:["Mech: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.dismount_driver"})]})}),(0,i.jsx)(t,{Description:(0,i.jsx)(i.Fragment,{children:"Dismounts the driver of the active model."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"mech-megactivemodeltagdefault_tint",children:["Mech: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.default_tint"})]})}),(0,i.jsx)(t,{Input:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(c.code,{children:"ColorTag"})}),Description:(0,i.jsx)(i.Fragment,{children:"Sets the default tint of the active model."}),Tags:(0,i.jsx)(c.a,{href:"#tag-megactivemodeltagdefault_tint",children:(0,i.jsx)(c.code,{children:"MegActiveModelTag.default_tint"})})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"mech-megactivemodeltagglow_color",children:["Mech: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.glow_color"})]})}),(0,i.jsx)(t,{Input:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(c.code,{children:"ColorTag"})}),Description:(0,i.jsx)(i.Fragment,{children:"Sets the glow color of the active model."}),Tags:(0,i.jsx)(c.a,{href:"#tag-megactivemodeltagglow_color",children:(0,i.jsx)(c.code,{children:"MegActiveModelTag.glow_color"})})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"mech-megactivemodeltaghitbox_scale",children:["Mech: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.hitbox_scale"})]})}),(0,i.jsx)(t,{Input:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(c.code,{children:"ElementTag(Decimal)"})}),Description:(0,i.jsx)(i.Fragment,{children:"Sets the scale of the active model's hitbox."}),Tags:(0,i.jsx)(c.a,{href:"#tag-megactivemodeltaghitbox_scale",children:(0,i.jsx)(c.code,{children:"MegActiveModelTag.hitbox_scale"})})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"mech-megactivemodeltaghitbox_visible",children:["Mech: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.hitbox_visible"})]})}),(0,i.jsx)(t,{Input:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(c.code,{children:"ElementTag(Boolean)"})}),Description:(0,i.jsx)(i.Fragment,{children:"Sets whether the hitbox of the active model is visible."}),Tags:(0,i.jsx)(c.a,{href:"#tag-megactivemodeltaghitbox_visible",children:(0,i.jsx)(c.code,{children:"MegActiveModelTag.hitbox_visible"})})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"mech-megactivemodeltaglock_pitch",children:["Mech: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.lock_pitch"})]})}),(0,i.jsx)(t,{Input:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(c.code,{children:"ElementTag(Boolean)"})}),Description:(0,i.jsx)(i.Fragment,{children:"Sets whether the pitch of the active model is locked."}),Tags:(0,i.jsx)(c.a,{href:"#tag-megactivemodeltaglock_pitch",children:(0,i.jsx)(c.code,{children:"MegActiveModelTag.lock_pitch"})})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"mech-megactivemodeltaglock_yaw",children:["Mech: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.lock_yaw"})]})}),(0,i.jsx)(t,{Input:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(c.code,{children:"ElementTag(Boolean)"})}),Description:(0,i.jsx)(i.Fragment,{children:"Sets whether the yaw of the active model is locked."}),Tags:(0,i.jsx)(c.a,{href:"#tag-megactivemodeltaglock_yaw",children:(0,i.jsx)(c.code,{children:"MegActiveModelTag.lock_yaw"})})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(c.h3,{id:"mech-megactivemodeltagscale",children:["Mech: ",(0,i.jsx)(c.code,{children:"MegActiveModelTag.scale"})]})}),(0,i.jsx)(t,{Input:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(c.code,{children:"ElementTag(Decimal)"})}),Description:(0,i.jsx)(i.Fragment,{children:"Sets the scale of the active model."}),Tags:(0,i.jsx)(c.a,{href:"#tag-megactivemodeltagscale",children:(0,i.jsx)(c.code,{children:"MegActiveModelTag.scale"})})})]})]})}function r(e={}){const{wrapper:c}={...(0,d.R)(),...e.components};return c?(0,i.jsx)(c,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}function h(e,c){throw new Error("Expected "+(c?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},5710:(e,c,t)=>{t.d(c,{R:()=>l,x:()=>o});var i=t(758);const d={},a=i.createContext(d);function l(e){const c=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(c):{...c,...e}}),[c,e])}function o(e){let c;return c=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),i.createElement(a.Provider,{value:c},e.children)}}}]);