"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[728],{732:(e,t,c)=>{c.r(t),c.d(t,{assets:()=>n,contentTitle:()=>l,default:()=>g,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var i=c(3274),d=c(7023);const a={sidebar_custom_props:{description:"Represents an active model on an entity."}},l="MegActiveModelTag",o={id:"objecttype/MegActiveModelTag",title:"MegActiveModelTag",description:"<ObjectType",source:"@site/docs/objecttype/MegActiveModelTag.mdx",sourceDirName:"objecttype",slug:"/objecttype/MegActiveModelTag",permalink:"/megizen-docs/objecttype/MegActiveModelTag",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_custom_props:{description:"Represents an active model on an entity."}},sidebar:"tutorialSidebar",previous:{title:"megstate",permalink:"/megizen-docs/command/megstate"},next:{title:"MegBoneTag",permalink:"/megizen-docs/objecttype/MegBoneTag"}},n={},s=[{value:"Tags",id:"tags",level:2},{value:"Tag: <code>MegActiveModelTag.bone[&lt;id&gt;]</code>",id:"tag-megactivemodeltagboneid",level:3},{value:"Tag: <code>MegActiveModelTag.bones</code>",id:"tag-megactivemodeltagbones",level:3},{value:"Tag: <code>MegActiveModelTag.damage_tint</code>",id:"tag-megactivemodeltagdamage_tint",level:3},{value:"Tag: <code>MegActiveModelTag.default_tint</code>",id:"tag-megactivemodeltagdefault_tint",level:3},{value:"Tag: <code>MegActiveModelTag.hitbox_scale</code>",id:"tag-megactivemodeltaghitbox_scale",level:3},{value:"Tag: <code>MegActiveModelTag.hitbox_visible</code>",id:"tag-megactivemodeltaghitbox_visible",level:3},{value:"Tag: <code>MegActiveModelTag.lock_yaw</code>",id:"tag-megactivemodeltaglock_yaw",level:3},{value:"Tag: <code>MegActiveModelTag.lock_pitch</code>",id:"tag-megactivemodeltaglock_pitch",level:3},{value:"Tag: <code>MegActiveModelTag.modeled_entity</code>",id:"tag-megactivemodeltagmodeled_entity",level:3},{value:"Tag: <code>MegActiveModelTag.scale</code>",id:"tag-megactivemodeltagscale",level:3},{value:"Mechanisms",id:"mechanisms",level:2},{value:"Mech: <code>MegActiveModelTag.damage_tint</code>",id:"mech-megactivemodeltagdamage_tint",level:3},{value:"Mech: <code>MegActiveModelTag.default_tint</code>",id:"mech-megactivemodeltagdefault_tint",level:3},{value:"Mech: <code>MegActiveModelTag.hitbox_scale</code>",id:"mech-megactivemodeltaghitbox_scale",level:3},{value:"Mech: <code>MegActiveModelTag.hitbox_visible</code>",id:"mech-megactivemodeltaghitbox_visible",level:3},{value:"Mech: <code>MegActiveModelTag.lock_pitch</code>",id:"mech-megactivemodeltaglock_pitch",level:3},{value:"Mech: <code>MegActiveModelTag.lock_yaw</code>",id:"mech-megactivemodeltaglock_yaw",level:3},{value:"Mech: <code>MegActiveModelTag.scale</code>",id:"mech-megactivemodeltagscale",level:3}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",...(0,d.R)(),...e.components},{DetailsTable:c,EntryHeader:a,MetaEntry:l,ObjectType:o}=t;return c||r("DetailsTable",!0),a||r("EntryHeader",!0),l||r("MetaEntry",!0),o||r("ObjectType",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"megactivemodeltag",children:"MegActiveModelTag"}),"\n",(0,i.jsx)(o,{name:"MegActiveModelTag",prefix:"megactivemodel@",identityFormat:(0,i.jsxs)(i.Fragment,{children:["Identified using the format ",(0,i.jsx)(t.code,{children:"megactivemodel@<entity>,<model_blueprint>"}),"."]}),description:(0,i.jsx)(i.Fragment,{children:"Represents an active model on an entity."})}),"\n",(0,i.jsx)(t.h2,{id:"tags",children:"Tags"}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(t.h3,{id:"tag-megactivemodeltagboneid",children:["Tag: ",(0,i.jsx)(t.code,{children:"MegActiveModelTag.bone[<id>]"})]})}),(0,i.jsx)(c,{Returns:(0,i.jsx)(t.code,{children:"MegBoneTag"}),Description:(0,i.jsx)(i.Fragment,{children:"Returns the bone with the specified id of the model."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(t.h3,{id:"tag-megactivemodeltagbones",children:["Tag: ",(0,i.jsx)(t.code,{children:"MegActiveModelTag.bones"})]})}),(0,i.jsx)(c,{Returns:(0,i.jsx)(t.code,{children:"MapTag(MegBoneTag)"}),Description:(0,i.jsx)(i.Fragment,{children:"Returns a map of all the bones of the model, with the bone id as the key and the bone as the value."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(t.h3,{id:"tag-megactivemodeltagdamage_tint",children:["Tag: ",(0,i.jsx)(t.code,{children:"MegActiveModelTag.damage_tint"})]})}),(0,i.jsx)(c,{Returns:(0,i.jsx)(t.code,{children:"ColorTag"}),Mechanism:(0,i.jsx)(t.a,{href:"#mech-megactivemodeltagdamage_tint",children:(0,i.jsx)(t.code,{children:"damage_tint"})}),Description:(0,i.jsx)(i.Fragment,{children:"Returns the damage tint of the active model."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(t.h3,{id:"tag-megactivemodeltagdefault_tint",children:["Tag: ",(0,i.jsx)(t.code,{children:"MegActiveModelTag.default_tint"})]})}),(0,i.jsx)(c,{Returns:(0,i.jsx)(t.code,{children:"ColorTag"}),Mechanism:(0,i.jsx)(t.a,{href:"#mech-megactivemodeltagdefault_tint",children:(0,i.jsx)(t.code,{children:"default_tint"})}),Description:(0,i.jsx)(i.Fragment,{children:"Returns the default tint of the active model."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(t.h3,{id:"tag-megactivemodeltaghitbox_scale",children:["Tag: ",(0,i.jsx)(t.code,{children:"MegActiveModelTag.hitbox_scale"})]})}),(0,i.jsx)(c,{Returns:(0,i.jsx)(t.code,{children:"VectorObject"}),Mechanism:(0,i.jsx)(t.a,{href:"#mech-megactivemodeltaghitbox_scale",children:(0,i.jsx)(t.code,{children:"hitbox_scale"})}),Description:(0,i.jsx)(i.Fragment,{children:"Returns the scale of the active model's hitbox as a vector."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(t.h3,{id:"tag-megactivemodeltaghitbox_visible",children:["Tag: ",(0,i.jsx)(t.code,{children:"MegActiveModelTag.hitbox_visible"})]})}),(0,i.jsx)(c,{Returns:(0,i.jsx)(t.code,{children:"ElementTag(boolean)"}),Mechanism:(0,i.jsx)(t.a,{href:"#mech-megactivemodeltaghitbox_visible",children:(0,i.jsx)(t.code,{children:"hitbox_visible"})}),Description:(0,i.jsx)(i.Fragment,{children:"Returns whether the hitbox of the active model is visible."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(t.h3,{id:"tag-megactivemodeltaglock_yaw",children:["Tag: ",(0,i.jsx)(t.code,{children:"MegActiveModelTag.lock_yaw"})]})}),(0,i.jsx)(c,{Returns:(0,i.jsx)(t.code,{children:"ElementTag(boolean)"}),Mechanism:(0,i.jsx)(t.a,{href:"#mech-megactivemodeltaglock_yaw",children:(0,i.jsx)(t.code,{children:"lock_yaw"})}),Description:(0,i.jsx)(i.Fragment,{children:"Returns whether the yaw of the active model is locked."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(t.h3,{id:"tag-megactivemodeltaglock_pitch",children:["Tag: ",(0,i.jsx)(t.code,{children:"MegActiveModelTag.lock_pitch"})]})}),(0,i.jsx)(c,{Returns:(0,i.jsx)(t.code,{children:"ElementTag(boolean)"}),Mechanism:(0,i.jsx)(t.a,{href:"#mech-megactivemodeltaglock_pitch",children:(0,i.jsx)(t.code,{children:"lock_pitch"})}),Description:(0,i.jsx)(i.Fragment,{children:"Returns whether the pitch of the active model is locked."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(t.h3,{id:"tag-megactivemodeltagmodeled_entity",children:["Tag: ",(0,i.jsx)(t.code,{children:"MegActiveModelTag.modeled_entity"})]})}),(0,i.jsx)(c,{Returns:(0,i.jsx)(t.code,{children:"MegModeledEntityTag"}),Description:(0,i.jsx)(i.Fragment,{children:"Returns the modeled entity of the active model."})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(t.h3,{id:"tag-megactivemodeltagscale",children:["Tag: ",(0,i.jsx)(t.code,{children:"MegActiveModelTag.scale"})]})}),(0,i.jsx)(c,{Returns:(0,i.jsx)(t.code,{children:"VectorObject"}),Mechanism:(0,i.jsx)(t.a,{href:"#mech-megactivemodeltagscale",children:(0,i.jsx)(t.code,{children:"scale"})}),Description:(0,i.jsx)(i.Fragment,{children:"Returns the scale of the active model as a vector."})})]}),"\n",(0,i.jsx)(t.h2,{id:"mechanisms",children:"Mechanisms"}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(t.h3,{id:"mech-megactivemodeltagdamage_tint",children:["Mech: ",(0,i.jsx)(t.code,{children:"MegActiveModelTag.damage_tint"})]})}),(0,i.jsx)(c,{Input:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(t.code,{children:"ColorTag"})}),Description:(0,i.jsx)(i.Fragment,{children:"Sets the damage tint of the active model."}),Tags:(0,i.jsx)(t.a,{href:"#tag-megactivemodeltagdamage_tint",children:(0,i.jsx)(t.code,{children:"MegActiveModelTag.damage_tint"})})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(t.h3,{id:"mech-megactivemodeltagdefault_tint",children:["Mech: ",(0,i.jsx)(t.code,{children:"MegActiveModelTag.default_tint"})]})}),(0,i.jsx)(c,{Input:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(t.code,{children:"ColorTag"})}),Description:(0,i.jsx)(i.Fragment,{children:"Sets the default tint of the active model."}),Tags:(0,i.jsx)(t.a,{href:"#tag-megactivemodeltagdefault_tint",children:(0,i.jsx)(t.code,{children:"MegActiveModelTag.default_tint"})})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(t.h3,{id:"mech-megactivemodeltaghitbox_scale",children:["Mech: ",(0,i.jsx)(t.code,{children:"MegActiveModelTag.hitbox_scale"})]})}),(0,i.jsx)(c,{Input:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(t.code,{children:"ElementTag(Decimal)"})}),Description:(0,i.jsx)(i.Fragment,{children:"Sets the scale of the active model's hitbox."}),Tags:(0,i.jsx)(t.a,{href:"#tag-megactivemodeltaghitbox_scale",children:(0,i.jsx)(t.code,{children:"MegActiveModelTag.hitbox_scale"})})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(t.h3,{id:"mech-megactivemodeltaghitbox_visible",children:["Mech: ",(0,i.jsx)(t.code,{children:"MegActiveModelTag.hitbox_visible"})]})}),(0,i.jsx)(c,{Input:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(t.code,{children:"ElementTag(Boolean)"})}),Description:(0,i.jsx)(i.Fragment,{children:"Sets whether the hitbox of the active model is visible."}),Tags:(0,i.jsx)(t.a,{href:"#tag-megactivemodeltaghitbox_visible",children:(0,i.jsx)(t.code,{children:"MegActiveModelTag.hitbox_visible"})})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(t.h3,{id:"mech-megactivemodeltaglock_pitch",children:["Mech: ",(0,i.jsx)(t.code,{children:"MegActiveModelTag.lock_pitch"})]})}),(0,i.jsx)(c,{Input:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(t.code,{children:"ElementTag(Boolean)"})}),Description:(0,i.jsx)(i.Fragment,{children:"Sets whether the pitch of the active model is locked."}),Tags:(0,i.jsx)(t.a,{href:"#tag-megactivemodeltaglock_pitch",children:(0,i.jsx)(t.code,{children:"MegActiveModelTag.lock_pitch"})})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(t.h3,{id:"mech-megactivemodeltaglock_yaw",children:["Mech: ",(0,i.jsx)(t.code,{children:"MegActiveModelTag.lock_yaw"})]})}),(0,i.jsx)(c,{Input:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(t.code,{children:"ElementTag(Boolean)"})}),Description:(0,i.jsx)(i.Fragment,{children:"Sets whether the yaw of the active model is locked."}),Tags:(0,i.jsx)(t.a,{href:"#tag-megactivemodeltaglock_yaw",children:(0,i.jsx)(t.code,{children:"MegActiveModelTag.lock_yaw"})})})]}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)(a,{children:(0,i.jsxs)(t.h3,{id:"mech-megactivemodeltagscale",children:["Mech: ",(0,i.jsx)(t.code,{children:"MegActiveModelTag.scale"})]})}),(0,i.jsx)(c,{Input:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(t.code,{children:"ElementTag(Decimal)"})}),Description:(0,i.jsx)(i.Fragment,{children:"Sets the scale of the active model."}),Tags:(0,i.jsx)(t.a,{href:"#tag-megactivemodeltagscale",children:(0,i.jsx)(t.code,{children:"MegActiveModelTag.scale"})})})]})]})}function g(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}function r(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},7023:(e,t,c)=>{c.d(t,{R:()=>l,x:()=>o});var i=c(9474);const d={},a=i.createContext(d);function l(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);