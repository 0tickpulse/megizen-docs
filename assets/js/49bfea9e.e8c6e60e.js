"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[46],{5776:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>g,contentTitle:()=>s,default:()=>l,frontMatter:()=>c,metadata:()=>a,toc:()=>d});var o=t(6070),i=t(5710);const c={sidebar_custom_props:{description:"Represents a bone on a model."}},s="MegBoneTag",a={id:"objecttype/MegBoneTag",title:"MegBoneTag",description:"<ObjectType",source:"@site/docs/objecttype/MegBoneTag.mdx",sourceDirName:"objecttype",slug:"/objecttype/MegBoneTag",permalink:"/megizen-docs/objecttype/MegBoneTag",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_custom_props:{description:"Represents a bone on a model."}},sidebar:"tutorialSidebar",previous:{title:"MegActiveModelTag",permalink:"/megizen-docs/objecttype/MegActiveModelTag"},next:{title:"MegModeledEntityTag",permalink:"/megizen-docs/objecttype/MegModeledEntityTag"}},g={},d=[{value:"Tags",id:"tags",level:2},{value:"Tag: <code>MegBoneTag.children</code>",id:"tag-megbonetagchildren",level:3},{value:"Tag: <code>MegBoneTag.damage_tint</code>",id:"tag-megbonetagdamage_tint",level:3},{value:"Tag: <code>MegBoneTag.default_tint</code>",id:"tag-megbonetagdefault_tint",level:3},{value:"Tag: <code>MegBoneTag.global_position</code>",id:"tag-megbonetagglobal_position",level:3},{value:"Tag: <code>MegBoneTag.glow_color</code>",id:"tag-megbonetagglow_color",level:3},{value:"Tag: <code>MegBoneTag.id</code>",id:"tag-megbonetagid",level:3},{value:"Tag: <code>MegBoneTag.item</code>",id:"tag-megbonetagitem",level:3},{value:"Tag: <code>MegBoneTag.is_glowing</code>",id:"tag-megbonetagis_glowing",level:3},{value:"Tag: <code>MegBoneTag.location</code>",id:"tag-megbonetaglocation",level:3},{value:"Tag: <code>MegBoneTag.scale</code>",id:"tag-megbonetagscale",level:3},{value:"Tag: <code>MegBoneTag.skin_texture</code>",id:"tag-megbonetagskin_texture",level:3},{value:"Mechanisms",id:"mechanisms",level:2},{value:"Mech: <code>MegBoneTag.damage_tint</code>",id:"mech-megbonetagdamage_tint",level:3},{value:"Mech: <code>MegBoneTag.default_tint</code>",id:"mech-megbonetagdefault_tint",level:3},{value:"Mech: <code>MegBoneTag.glow_color</code>",id:"mech-megbonetagglow_color",level:3},{value:"Mech: <code>MegBoneTag.item</code>",id:"mech-megbonetagitem",level:3},{value:"Mech: <code>MegBoneTag.is_glowing</code>",id:"mech-megbonetagis_glowing",level:3},{value:"Mech: <code>MegBoneTag.scale</code>",id:"mech-megbonetagscale",level:3},{value:"Mech: <code>MegBoneTag.skin_texture</code>",id:"mech-megbonetagskin_texture",level:3}];function r(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",...(0,i.R)(),...e.components},{DetailsTable:t,EntryHeader:c,MetaEntry:s,ObjectType:a}=n;return t||h("DetailsTable",!0),c||h("EntryHeader",!0),s||h("MetaEntry",!0),a||h("ObjectType",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"megbonetag",children:"MegBoneTag"}),"\n",(0,o.jsx)(a,{name:"MegBoneTag",prefix:"megbonetag@",identityFormat:(0,o.jsxs)(o.Fragment,{children:["Identified using the format ",(0,o.jsx)(n.code,{children:"megbonetag@<entity>,<model_blueprint>,<bone_id>"}),"."]}),description:(0,o.jsx)(o.Fragment,{children:"Represents a bone on a model."})}),"\n",(0,o.jsx)(n.h2,{id:"tags",children:"Tags"}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(c,{children:(0,o.jsxs)(n.h3,{id:"tag-megbonetagchildren",children:["Tag: ",(0,o.jsx)(n.code,{children:"MegBoneTag.children"})]})}),(0,o.jsx)(t,{Returns:(0,o.jsx)(n.code,{children:"MapTag(MegBoneTag)"}),Description:(0,o.jsx)(o.Fragment,{children:"Returns a map of all the children of the bone, with the bone id as the key and the bone as the value."})})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(c,{children:(0,o.jsxs)(n.h3,{id:"tag-megbonetagdamage_tint",children:["Tag: ",(0,o.jsx)(n.code,{children:"MegBoneTag.damage_tint"})]})}),(0,o.jsx)(t,{Returns:(0,o.jsx)(n.code,{children:"ColorTag"}),Mechanism:(0,o.jsx)(n.a,{href:"#mech-megbonetagdamage_tint",children:(0,o.jsx)(n.code,{children:"damage_tint"})}),Description:(0,o.jsx)(o.Fragment,{children:"Returns the damage tint of the bone."})})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(c,{children:(0,o.jsxs)(n.h3,{id:"tag-megbonetagdefault_tint",children:["Tag: ",(0,o.jsx)(n.code,{children:"MegBoneTag.default_tint"})]})}),(0,o.jsx)(t,{Returns:(0,o.jsx)(n.code,{children:"ColorTag"}),Mechanism:(0,o.jsx)(n.a,{href:"#mech-megbonetagdefault_tint",children:(0,o.jsx)(n.code,{children:"damage_tint"})}),Description:(0,o.jsx)(o.Fragment,{children:"Returns the default tint of the bone."})})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(c,{children:(0,o.jsxs)(n.h3,{id:"tag-megbonetagglobal_position",children:["Tag: ",(0,o.jsx)(n.code,{children:"MegBoneTag.global_position"})]})}),(0,o.jsx)(t,{Returns:(0,o.jsx)(n.code,{children:"LocationTag"}),Description:(0,o.jsx)(o.Fragment,{children:"Returns the position of the bone as a vector."})})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(c,{children:(0,o.jsxs)(n.h3,{id:"tag-megbonetagglow_color",children:["Tag: ",(0,o.jsx)(n.code,{children:"MegBoneTag.glow_color"})]})}),(0,o.jsx)(t,{Returns:(0,o.jsx)(n.code,{children:"ColorTag"}),Mechanism:(0,o.jsx)(n.a,{href:"#mech-megbonetagglow_color",children:(0,o.jsx)(n.code,{children:"glow_color"})}),Description:(0,o.jsx)(o.Fragment,{children:"Returns the glow color of the bone."})})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(c,{children:(0,o.jsxs)(n.h3,{id:"tag-megbonetagid",children:["Tag: ",(0,o.jsx)(n.code,{children:"MegBoneTag.id"})]})}),(0,o.jsx)(t,{Returns:(0,o.jsx)(n.code,{children:"ElementTag"}),Description:(0,o.jsx)(o.Fragment,{children:"Returns the id of the bone."})})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(c,{children:(0,o.jsxs)(n.h3,{id:"tag-megbonetagitem",children:["Tag: ",(0,o.jsx)(n.code,{children:"MegBoneTag.item"})]})}),(0,o.jsx)(t,{Returns:(0,o.jsx)(n.code,{children:"ItemTag"}),Mechanism:(0,o.jsx)(n.a,{href:"#mech-megbonetagitem",children:(0,o.jsx)(n.code,{children:"item"})}),Description:(0,o.jsx)(o.Fragment,{children:"Returns the underlying item that the bone uses."})})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(c,{children:(0,o.jsxs)(n.h3,{id:"tag-megbonetagis_glowing",children:["Tag: ",(0,o.jsx)(n.code,{children:"MegBoneTag.is_glowing"})]})}),(0,o.jsx)(t,{Returns:(0,o.jsx)(n.code,{children:"ElementTag(Boolean)"}),Mechanism:(0,o.jsx)(n.a,{href:"#mech-megbonetagis_glowing",children:(0,o.jsx)(n.code,{children:"is_glowing"})}),Description:(0,o.jsx)(o.Fragment,{children:"Returns whether the bone is glowing."})})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(c,{children:(0,o.jsxs)(n.h3,{id:"tag-megbonetaglocation",children:["Tag: ",(0,o.jsx)(n.code,{children:"MegBoneTag.location"})]})}),(0,o.jsx)(t,{Returns:(0,o.jsx)(n.code,{children:"LocationTag"}),Description:(0,o.jsx)(o.Fragment,{children:"Returns the location of the bone."})})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(c,{children:(0,o.jsxs)(n.h3,{id:"tag-megbonetagscale",children:["Tag: ",(0,o.jsx)(n.code,{children:"MegBoneTag.scale"})]})}),(0,o.jsx)(t,{Returns:(0,o.jsx)(n.code,{children:"LocationTag"}),Mechanism:(0,o.jsx)(n.a,{href:"#mech-megbonetagscale",children:(0,o.jsx)(n.code,{children:"scale"})}),Description:(0,o.jsx)(o.Fragment,{children:"Returns the scale of the bone as a vector."})})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(c,{children:(0,o.jsxs)(n.h3,{id:"tag-megbonetagskin_texture",children:["Tag: ",(0,o.jsx)(n.code,{children:"MegBoneTag.skin_texture"})]})}),(0,o.jsx)(t,{Returns:(0,o.jsx)(n.code,{children:"ElementTag"}),Mehcanism:(0,o.jsx)(n.a,{href:"#mech-megbonetagskin_texture",children:(0,o.jsx)(n.code,{children:"skin_texture"})}),Description:(0,o.jsxs)(o.Fragment,{children:["Returns the skin texture of the bone. Returns null if the bone doesn't have a skin texture. The format is"," ",(0,o.jsx)(n.code,{children:"UUID|Texture|Name"}),"."]})})]}),"\n",(0,o.jsx)(n.h2,{id:"mechanisms",children:"Mechanisms"}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(c,{children:(0,o.jsxs)(n.h3,{id:"mech-megbonetagdamage_tint",children:["Mech: ",(0,o.jsx)(n.code,{children:"MegBoneTag.damage_tint"})]})}),(0,o.jsx)(t,{Input:(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(n.code,{children:"ColorTag"})}),Description:(0,o.jsx)(o.Fragment,{children:"Sets the damage tint of the bone."}),Tags:(0,o.jsx)(n.a,{href:"#tag-megbonetagdamage_tint",children:(0,o.jsx)(n.code,{children:"MegBoneTag.damage_tint"})})})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(c,{children:(0,o.jsxs)(n.h3,{id:"mech-megbonetagdefault_tint",children:["Mech: ",(0,o.jsx)(n.code,{children:"MegBoneTag.default_tint"})]})}),(0,o.jsx)(t,{Input:(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(n.code,{children:"ColorTag"})}),Description:(0,o.jsx)(o.Fragment,{children:"Sets the default tint of the bone."}),Tags:(0,o.jsx)(n.a,{href:"#tag-megbonetagdefault_tint",children:(0,o.jsx)(n.code,{children:"MegBoneTag.default_tint"})})})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(c,{children:(0,o.jsxs)(n.h3,{id:"mech-megbonetagglow_color",children:["Mech: ",(0,o.jsx)(n.code,{children:"MegBoneTag.glow_color"})]})}),(0,o.jsx)(t,{Input:(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(n.code,{children:"ColorTag"})}),Description:(0,o.jsx)(o.Fragment,{children:"Sets the glow color of the bone."}),Tags:(0,o.jsx)(n.a,{href:"#tag-megbonetagglow_color",children:(0,o.jsx)(n.code,{children:"MegBoneTag.glow_color"})})})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(c,{children:(0,o.jsxs)(n.h3,{id:"mech-megbonetagitem",children:["Mech: ",(0,o.jsx)(n.code,{children:"MegBoneTag.item"})]})}),(0,o.jsx)(t,{Input:(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(n.code,{children:"ItemTag"})}),Description:(0,o.jsx)(o.Fragment,{children:"Sets the underlying item that the bone uses. Shouldn't be used unless you know what you're doing."}),Tags:(0,o.jsx)(n.a,{href:"#tag-megbonetagitem",children:(0,o.jsx)(n.code,{children:"MegBoneTag.item"})})})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(c,{children:(0,o.jsxs)(n.h3,{id:"mech-megbonetagis_glowing",children:["Mech: ",(0,o.jsx)(n.code,{children:"MegBoneTag.is_glowing"})]})}),(0,o.jsx)(t,{Input:(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(n.code,{children:"ElementTag(Boolean)"})}),Description:(0,o.jsx)(o.Fragment,{children:"Sets whether the bone is glowing.."}),Tags:(0,o.jsx)(n.a,{href:"#tag-megbonetagis_glowing",children:(0,o.jsx)(n.code,{children:"MegBoneTag.is_glowing"})})})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(c,{children:(0,o.jsxs)(n.h3,{id:"mech-megbonetagscale",children:["Mech: ",(0,o.jsx)(n.code,{children:"MegBoneTag.scale"})]})}),(0,o.jsx)(t,{Input:(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(n.code,{children:"ElementTag(Number)"})}),Description:(0,o.jsx)(o.Fragment,{children:"Sets the scale of the bone."}),Tags:(0,o.jsx)(n.a,{href:"#tag-megbonetagscale",children:(0,o.jsx)(n.code,{children:"MegBoneTag.scale"})})})]}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(c,{children:(0,o.jsxs)(n.h3,{id:"mech-megbonetagskin_texture",children:["Mech: ",(0,o.jsx)(n.code,{children:"MegBoneTag.skin_texture"})]})}),(0,o.jsx)(t,{Input:(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(n.code,{children:"ElementTag"})}),Description:(0,o.jsxs)(o.Fragment,{children:["Sets the skin texture of the bone. The format is ",(0,o.jsx)(n.code,{children:"UUID|Texture|Name"}),"."]}),Tags:(0,o.jsx)(n.a,{href:"#tag-megbonetagskin_texture",children:(0,o.jsx)(n.code,{children:"MegBoneTag.skin_texture"})})})]})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},5710:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(758);const i={},c=o.createContext(i);function s(e){const n=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(c.Provider,{value:n},e.children)}}}]);